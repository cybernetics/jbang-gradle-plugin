/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020 Andres Almiray.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java-library'
    id 'groovy'
    id 'idea'
    id 'org.kordamp.gradle.groovy-project'
    id 'org.kordamp.gradle.bintray'
    id 'org.kordamp.gradle.plugin'
    id 'com.github.johnrengelman.shadow'
}

config {
    info {
        name          = rootProject.name
        description   = 'Gradle plugin for JBang'
        inceptionYear = '2020'
        tags          = ['jbang']

        specification { enabled = false }
    }

    docs {
        groovydoc {
            replaceJavadoc = true
        }
    }

    plugins {
        plugin {
            name                = 'jbang'
            id                  = 'org.kordamp.gradle.jbang'
            implementationClass = 'org.kordamp.gradle.plugin.jbang.JBangPlugin'
        }
    }

    bintray {
        skipMavenSync = true
    }
}

repositories {
    gradlePluginPortal()
    flatDir { dir 'libs' }
    mavenLocal()
}

configurations {
    uberjar
}

dependencies {
    compileOnly gradleApi()

    api "org.kordamp.gradle:base-gradle-plugin:$kordampPluginVersion"
    api 'org.zeroturnaround:zt-exec:1.12'
    api 'org.apache.commons:commons-compress:1.20'
    api "commons-io:commons-io:$commonsIoVersion"
    uberjar ':gradle-wrapper:6.6.1'

    testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'cglib:cglib-nodep:3.3.0'
    testImplementation 'org.objenesis:objenesis:3.1'
}

processResources {
    inputs.property('version', project.version)
    filesMatching(['**/*.properties']) {
        expand(
            'version': project.version,
            'id'     : 'jbang',
            'name'   : 'JBang Gradle plugin'
        )
    }
}

sourceSets {
    main {
        compileClasspath += configurations.uberjar
        runtimeClasspath += compileClasspath
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.uberjar]
    }
}

shadowJar {
    configurations    = [project.configurations.uberjar]
    archiveBaseName   = project.name
    archiveClassifier = ''
    relocate 'org.gradle.wrapper', 'shaded.org.gradle.wrapper'
    exclude 'gradle-wrapper-classpath.properties'
    exclude 'gradle-wrapper-parameter-names.properties'
    exclude 'gradle-cli-classpath.properties'
    exclude 'gradle-cli-parameter-names.properties'
    exclude 'org/gradle/cli/**'
}

jar.finalizedBy shadowJar
